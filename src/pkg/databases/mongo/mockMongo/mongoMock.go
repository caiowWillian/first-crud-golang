package mockMongo

import (
	//"github.com/caiowWillian/first-crud-golang/src/pkg/databases/mongo"
	"github.com/caiowWillian/first-crud-golang/src/pkg/databases/mongo"
	"github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields: operation, data
func (_m *Repository) GetAll(operation mongo.MongoOperation, data interface{}) error {
	ret := _m.Called(operation, data)

	var r0 error
	if rf, ok := ret.Get(0).(func(mongo.MongoOperation, interface{}) error); ok {
		r0 = rf(operation, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Insert provides a mock function with given fields: operation
func (_m *Repository) Insert(operation mongo.MongoOperation) error {
	ret := _m.Called(operation)

	var r0 error
	if rf, ok := ret.Get(0).(func(mongo.MongoOperation) error); ok {
		r0 = rf(operation)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Ping provides a mock function with given fields:
func (_m *Repository) Ping() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
